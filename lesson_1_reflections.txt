How did viewing a diff between two versions of a file help you see the bug that
was introduced?

Answer: Diff shows only the lines that are different, thus making it a lot
easier to pinpoint the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Answer: It would be possible to undo some of the changes made to the file.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Answer: Pro - commits seem more logical, showing meaningful changes. Con - the
user might forget to do it.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Answer: Because Git is targeted at software development.

How can you use the commands git log and git diff to view the history of files?

Answer: By inspecting what was added and removed from one version to another.

How might using version control make you more confident to make changes that
could break something?

Answer: If I'm not happy with the changes, it's easy to revert to the last
commit.

Now that you have your workspace set up, what do you want to try using Git for?

Use it in my own projects (integrating with Android Studio / Eclipse).
